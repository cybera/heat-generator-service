description: Template to install JupyterLab
# ocata version, 2023-02-14
# pike version, 2023-02-14
heat_template_version: 2018-03-02

# input parameters that have to be provided when instantiating template
# optional and can be omitted when no input is required
# customize each deployment (e.g. setting custom user names or passwords)
# or binding to environment-specifics like certain images
# https://docs.openstack.org/heat/pike/template_guide/hot_spec.html#parameters-section

resources:
  data_volume:
    type: OS::Cinder::Volume
    properties:
      name: "data"
      size: <SIZE>
      volume_type: "encrypted"

  my_key:
    type: OS::Nova::KeyPair
    properties:
      save_private_key: true
      name: jupyter_key

  security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Security Group for Jupyter Notebook
      name: jupyter_security_group
      rules:
        - direction: ingress
          ethertype: IPv4
          port_range_min: 22
          port_range_max: 22
          protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
        - direction: ingress
          ethertype: IPv6
          port_range_min: 22
          port_range_max: 22
          protocol: tcp
          remote_ip_prefix: ::/0
        - direction: ingress
          ethertype: IPv4
          port_range_min: 8888
          port_range_max: 8888
          protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
        - direction: ingress
          ethertype: IPv6
          port_range_min: 8888
          port_range_max: 8888
          protocol: tcp
          remote_ip_prefix: ::/0
        - direction: ingress
          ethertype: IPv4
          protocol: icmp
          remote_ip_prefix: 0.0.0.0/0
        - direction: ingress
          ethertype: IPv6
          protocol: icmp
          remote_ip_prefix: ::/0
  instance:
    type: OS::Nova::Server
    properties:
      flavor: <FLAVOR>
      key_name: { get_resource: my_key }
      image: <IMAGE>
      security_groups:
        - { get_resource: security_group }
      networks:
        - network: default
      user_data: |
        #!/bin/bash
        wall "Completing Install"
        touch /home/ubuntu/still_installing
        if [[ -f /usr/local/bin/enableAutoUpdate ]]; then
          /usr/local/bin/enableAutoUpdate
        fi
        mkdir /data
        wall "Prepping and mounting volume"
        vol="/dev/sdc"
        ip6=$(ip -6 addr show ens3 | awk '/2605/ { print $2 }' | awk 'BEGIN { FS="/"; } { print $1 }')
        dns_name=$(dig +short -x $ip6 @ns-yyc.cloud.cybera.ca)
        dns_name=${dns_name::-1}
        if [[ -e "${vol}" ]]; then
          fs=$(blkid -o value -s TYPE $vol)
          if [[ $fs != "ext4" ]]; then
            mkfs -t ext4 $vol
          fi
          mount $vol /data
          dev_path=$(readlink -f $vol)
          uuid=$(lsblk -no uuid $dev_path)
          echo "UUID=${uuid} /data ext4 defaults 0 1 " | tee --append  /etc/fstab
        fi
        wall "Installing Software"
        mkdir /data/notebooks
        apt-get -qq update
        apt-get -qq install -y software-properties-common python3.8 python3-pip
        pip3 install jupyterlab
        pip3 install markupsafe==2.0.1
        repo="<REPO>"
        cd /home/ubuntu
        wall "Installing requirements.txt from your repo"
        git clone ${repo} && cd "$(basename "${repo}" .git)"
        pip3 install -q -r requirements.txt
        cd ..
        wall "Setting up JupyterLab"
        hashed=$(python3 -c "from notebook.auth import passwd; import random; import string; output = ''.join(random.choice(string.ascii_letters) for i in range(24)); f = open(\"jupyterpass.txt\", \"a\"); f.write(str(output + \"\n\")); f.close(); print(passwd(str(output)))")
        tee -a /etc/systemd/system/jupyter.service <<EOF
        [Unit]
        Description=Jupyter Notebook

        [Service]
        Type=simple
        PIDFile=/run/jupyter.pid
        ExecStart=/usr/local/bin/jupyter-lab --ip='*' --notebook-dir=/data/notebooks --allow-root --no-browser --NotebookApp.password=${hashed}
        User=root
        Group=root
        Restart=always
        RestartSec=10

        [Install]
        WantedBy=multi-user.target
        EOF

        wall "Starting Services"
        systemctl daemon-reload
        systemctl enable jupyter
        systemctl start jupyter
        mv /home/ubuntu/still_installing /home/ubuntu/install_complete
        ip4=$(hostname -I | cut -d' ' -f1)
        wall "Install Complete! You should now be able to go to http://${ip4}:8888/lab and use the password in jupyterpass.txt to log in"


  volume_attachment:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_resource: data_volume }
      instance_uuid: { get_resource: instance }

outputs:
  instance_detail:
    description: 
    value: { get_attr: [instance, show] }

  private_key:
    description: Private key
    value: { get_attr: [ my_key, private_key ] }

